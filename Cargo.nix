# This file was @generated by cargo2nix 0.11.0.
# It is not intended to be manually edited.

args@{
  release ? true,
  rootFeatures ? [
    "lopdf/default"
  ],
  rustPackages,
  buildRustPackages,
  hostPlatform,
  hostPlatformCpu ? null,
  hostPlatformFeatures ? [],
  target ? null,
  codegenOpts ? null,
  profileOpts ? null,
  cargoUnstableFlags ? null,
  rustcLinkFlags ? null,
  rustcBuildFlags ? null,
  mkRustCrate,
  rustLib,
  lib,
  workspaceSrc,
  ignoreLockHash,
}:
let
  nixifiedLockHash = "83e6e8262b70862ba04f99ab6f0f6959c5f0a37e91550e54d6fd282fb9ee1b81";
  workspaceSrc = if args.workspaceSrc == null then ./. else args.workspaceSrc;
  currentLockHash = builtins.hashFile "sha256" (workspaceSrc + /Cargo.lock);
  lockHashIgnored = if ignoreLockHash
                  then builtins.trace "Ignoring lock hash" ignoreLockHash
                  else ignoreLockHash;
in if !lockHashIgnored && (nixifiedLockHash != currentLockHash) then
  throw ("Cargo.nix ${nixifiedLockHash} is out of sync with Cargo.lock ${currentLockHash}")
else let
  inherit (rustLib) fetchCratesIo fetchCrateLocal fetchCrateGit fetchCrateAlternativeRegistry expandFeatures decideProfile genDrvsByProfile;
  profilesByName = {
  };
  rootFeatures' = expandFeatures rootFeatures;
  overridableMkRustCrate = f:
    let
      drvs = genDrvsByProfile profilesByName ({ profile, profileName }: mkRustCrate ({ inherit release profile hostPlatformCpu hostPlatformFeatures target profileOpts codegenOpts cargoUnstableFlags rustcLinkFlags rustcBuildFlags; } // (f profileName)));
    in { compileMode ? null, profileName ? decideProfile compileMode release }:
      let drv = drvs.${profileName}; in if compileMode == null then drv else drv.override { inherit compileMode; };
in
{
  cargo2nixVersion = "0.11.0";
  workspace = {
    lopdf = rustPackages.unknown.lopdf."0.35.0";
  };
  "registry+https://github.com/rust-lang/crates.io-index".addr2line."0.24.2" = overridableMkRustCrate (profileName: rec {
    name = "addr2line";
    version = "0.24.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "dfbe277e56a376000877090da837660b4427aad530e3028d44e0bffe4f89a1c1"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio" then "gimli" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gimli."0.31.1" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".adler2."2.0.0" = overridableMkRustCrate (profileName: rec {
    name = "adler2";
    version = "2.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "512761e0bb2578dd7380c6baaa0f4ce03e84f95e960231d1dec8bf4d7d6e2627"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".adler32."1.2.0" = overridableMkRustCrate (profileName: rec {
    name = "adler32";
    version = "1.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "aae1277d39aeec15cb388266ecc24b11c80469deae6067e17a1a7aa9e5c1f234"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".aes."0.8.4" = overridableMkRustCrate (profileName: rec {
    name = "aes";
    version = "0.8.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b169f7a6d4742236a0a00c541b845991d0ac43e546831af1249753ab4c3aa3a0"; };
    dependencies = {
      cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
      cipher = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cipher."0.4.4" { inherit profileName; }).out;
      ${ if hostPlatform.parsed.cpu.name == "aarch64" || hostPlatform.parsed.cpu.name == "x86_64" || hostPlatform.parsed.cpu.name == "i686" then "cpufeatures" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cpufeatures."0.2.17" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ahash."0.8.11" = overridableMkRustCrate (profileName: rec {
    name = "ahash";
    version = "0.8.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e89da841a80418a9b391ebaea17f5c112ffaaa96f621d2c285b5174da76b9011"; };
    dependencies = {
      cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
      ${ if !((hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l") && hostPlatform.parsed.kernel.name == "none") then "once_cell" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
      zerocopy = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zerocopy."0.7.35" { inherit profileName; }).out;
    };
    buildDependencies = {
      version_check = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.5" { profileName = "__noProfile"; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".aho-corasick."1.1.3" = overridableMkRustCrate (profileName: rec {
    name = "aho-corasick";
    version = "1.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8e60d3430d3a69478ad0993f19238d2df97c507009a52b3c10addcd7f6bcb916"; };
    features = builtins.concatLists [
      [ "perf-literal" ]
      [ "std" ]
    ];
    dependencies = {
      memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".aligned-vec."0.5.0" = overridableMkRustCrate (profileName: rec {
    name = "aligned-vec";
    version = "0.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4aa90d7ce82d4be67b64039a3d588d38dbcc6736577de4a847025ce5b0c468d1"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".allocator-api2."0.2.21" = overridableMkRustCrate (profileName: rec {
    name = "allocator-api2";
    version = "0.2.21";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "683d7910e743518b0e34f1186f92494becacb047c7b6bf616c96772180fef923"; };
    features = builtins.concatLists [
      [ "alloc" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".android-tzdata."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "android-tzdata";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".android_system_properties."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "android_system_properties";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.169" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".anstream."0.6.18" = overridableMkRustCrate (profileName: rec {
    name = "anstream";
    version = "0.6.18";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8acc5369981196006228e28809f761875c0327210a891e941f4c683b3a99529b"; };
    features = builtins.concatLists [
      [ "auto" ]
      [ "default" ]
      [ "wincon" ]
    ];
    dependencies = {
      anstyle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle."1.0.10" { inherit profileName; }).out;
      anstyle_parse = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle-parse."0.2.6" { inherit profileName; }).out;
      anstyle_query = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle-query."1.1.2" { inherit profileName; }).out;
      ${ if hostPlatform.isWindows then "anstyle_wincon" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle-wincon."3.0.7" { inherit profileName; }).out;
      colorchoice = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".colorchoice."1.0.3" { inherit profileName; }).out;
      is_terminal_polyfill = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".is_terminal_polyfill."1.70.1" { inherit profileName; }).out;
      utf8parse = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".utf8parse."0.2.2" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".anstyle."1.0.10" = overridableMkRustCrate (profileName: rec {
    name = "anstyle";
    version = "1.0.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "55cc3b69f167a1ef2e161439aa98aed94e6028e5f9a59be9a6ffb47aef1651f9"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".anstyle-parse."0.2.6" = overridableMkRustCrate (profileName: rec {
    name = "anstyle-parse";
    version = "0.2.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3b2d16507662817a6a20a9ea92df6652ee4f94f914589377d69f3b21bc5798a9"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "utf8" ]
    ];
    dependencies = {
      utf8parse = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".utf8parse."0.2.2" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".anstyle-query."1.1.2" = overridableMkRustCrate (profileName: rec {
    name = "anstyle-query";
    version = "1.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "79947af37f4177cfead1110013d678905c37501914fba0efea834c3fe9a8d60c"; };
    dependencies = {
      ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".anstyle-wincon."3.0.7" = overridableMkRustCrate (profileName: rec {
    name = "anstyle-wincon";
    version = "3.0.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ca3534e77181a9cc07539ad51f2141fe32f6c3ffd4df76db8ad92346b003ae4e"; };
    dependencies = {
      anstyle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle."1.0.10" { inherit profileName; }).out;
      ${ if hostPlatform.isWindows then "once_cell" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
      ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.95" = overridableMkRustCrate (profileName: rec {
    name = "anyhow";
    version = "1.0.95";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "34ac096ce696dc2fcabef30516bb13c0a68a11d30131d3df6f04711467681b04"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".arbitrary."1.4.1" = overridableMkRustCrate (profileName: rec {
    name = "arbitrary";
    version = "1.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "dde20b3d026af13f561bdd0f15edf01fc734f0dafcedbaf42bba506a9517f223"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".arg_enum_proc_macro."0.3.4" = overridableMkRustCrate (profileName: rec {
    name = "arg_enum_proc_macro";
    version = "0.3.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0ae92a5119aa49cdbcf6b9f893fe4e1d98b04ccbf82ee0584ad948a44a734dea"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "proc_macro2" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.93" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "quote" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "syn" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.96" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.7.6" = overridableMkRustCrate (profileName: rec {
    name = "arrayvec";
    version = "0.7.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7c02d123df017efcdfbd739ef81735b36c5ba83ec3c59c80a9d7ecc718f92e50"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".autocfg."1.4.0" = overridableMkRustCrate (profileName: rec {
    name = "autocfg";
    version = "1.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".av1-grain."0.2.3" = overridableMkRustCrate (profileName: rec {
    name = "av1-grain";
    version = "0.2.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6678909d8c5d46a42abcf571271e15fdbc0a225e3646cf23762cd415046c78bf"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "create")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "diff")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "estimate")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "nom")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "num-rational")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "parse")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "v_frame")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "anyhow" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anyhow."1.0.95" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "arrayvec" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.7.6" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "log" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.25" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "nom" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".nom."7.1.3" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "num_rational" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-rational."0.4.2" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "v_frame" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".v_frame."0.3.8" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".avif-serialize."0.8.2" = overridableMkRustCrate (profileName: rec {
    name = "avif-serialize";
    version = "0.8.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e335041290c43101ca215eed6f43ec437eb5a42125573f600fc3fa42b9bddd62"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "arrayvec" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.7.6" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.74" = overridableMkRustCrate (profileName: rec {
    name = "backtrace";
    version = "0.3.74";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8d82cb332cdfaed17ae235a638438ac4d4839913cc2af585c3c6746e8f8bee1a"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") "default")
      (lib.optional (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") "std")
    ];
    dependencies = {
      ${ if (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") && !(hostPlatform.isWindows && hostPlatform.parsed.abi.name == "msvc" && !(hostPlatform.parsed.vendor.name == "uwp")) then "addr2line" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".addr2line."0.24.2" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio" then "cfg_if" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
      ${ if (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") && !(hostPlatform.isWindows && hostPlatform.parsed.abi.name == "msvc" && !(hostPlatform.parsed.vendor.name == "uwp")) then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.169" { inherit profileName; }).out;
      ${ if (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") && !(hostPlatform.isWindows && hostPlatform.parsed.abi.name == "msvc" && !(hostPlatform.parsed.vendor.name == "uwp")) then "miniz_oxide" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.8.3" { inherit profileName; }).out;
      ${ if (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") && !(hostPlatform.isWindows && hostPlatform.parsed.abi.name == "msvc" && !(hostPlatform.parsed.vendor.name == "uwp")) then "object" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".object."0.36.7" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio" then "rustc_demangle" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.24" { inherit profileName; }).out;
      ${ if (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") && hostPlatform.isWindows then "windows_targets" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bit_field."0.10.2" = overridableMkRustCrate (profileName: rec {
    name = "bit_field";
    version = "0.10.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "dc827186963e592360843fb5ba4b973e145841266c1357f7180c43526f2e5b61"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" = overridableMkRustCrate (profileName: rec {
    name = "bitflags";
    version = "1.3.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bitflags."2.8.0" = overridableMkRustCrate (profileName: rec {
    name = "bitflags";
    version = "2.8.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8f68f53c83ab957f72c32642f3868eec03eb974d1fb82e453128456482613d36"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bitstream-io."2.6.0" = overridableMkRustCrate (profileName: rec {
    name = "bitstream-io";
    version = "2.6.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6099cdc01846bc367c4e7dd630dc5966dccf36b652fae7a74e17b640411a91b2"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.10.4" = overridableMkRustCrate (profileName: rec {
    name = "block-buffer";
    version = "0.10.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71"; };
    dependencies = {
      generic_array = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.7" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".block-padding."0.3.3" = overridableMkRustCrate (profileName: rec {
    name = "block-padding";
    version = "0.3.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a8894febbff9f758034a5b8e12d87918f56dfc64a8e1fe757d65e29041538d93"; };
    dependencies = {
      generic_array = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.7" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".built."0.7.5" = overridableMkRustCrate (profileName: rec {
    name = "built";
    version = "0.7.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c360505aed52b7ec96a3636c3f039d99103c37d1d9b4f7a8c743d3ea9ffcd03b"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bumpalo."3.17.0" = overridableMkRustCrate (profileName: rec {
    name = "bumpalo";
    version = "3.17.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1628fb46dfa0b37568d12e5edd512553eccf6a22a78e8bde00bb4aed84d5bdbf"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bytecount."0.6.8" = overridableMkRustCrate (profileName: rec {
    name = "bytecount";
    version = "0.6.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5ce89b21cab1437276d2650d57e971f9d548a2d9037cc231abdc0562b97498ce"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.21.0" = overridableMkRustCrate (profileName: rec {
    name = "bytemuck";
    version = "1.21.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ef657dfab802224e671f5818e9a4935f9b1957ed18e58292690cc39e7a4092a3"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "extern_crate_alloc")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".byteorder."1.5.0" = overridableMkRustCrate (profileName: rec {
    name = "byteorder";
    version = "1.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".byteorder-lite."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "byteorder-lite";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8f1fe948ff07f4bd06c30984e69f5b4899c516a3ef74f34df92a2df2ab535495"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".bytes."1.9.0" = overridableMkRustCrate (profileName: rec {
    name = "bytes";
    version = "1.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "325918d6fe32f23b19878fe4b34794ae41fc19ddbe53b10571a4874d44ffd39b"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") "default")
      (lib.optional (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") "std")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cbc."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "cbc";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "26b52a9543ae338f279b96b0b9fed9c8093744685043739079ce85cd58f289a6"; };
    features = builtins.concatLists [
      [ "block-padding" ]
      [ "default" ]
    ];
    dependencies = {
      cipher = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cipher."0.4.4" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cc."1.2.10" = overridableMkRustCrate (profileName: rec {
    name = "cc";
    version = "1.2.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "13208fcbb66eaeffe09b99fffbe1af420f00a7b35aa99ad683dfc1aa76145229"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "parallel")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "jobserver" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.32" { inherit profileName; }).out;
      ${ if (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") && hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.169" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "shlex" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".shlex."1.3.0" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cfg-expr."0.15.8" = overridableMkRustCrate (profileName: rec {
    name = "cfg-expr";
    version = "0.15.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d067ad48b8650848b989a59a86c6c36a995d02d2bf778d45c3c5d57bc2718f02"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "target-lexicon")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "targets")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "smallvec" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "target_lexicon" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".target-lexicon."0.12.16" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" = overridableMkRustCrate (profileName: rec {
    name = "cfg-if";
    version = "1.0.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.39" = overridableMkRustCrate (profileName: rec {
    name = "chrono";
    version = "0.4.39";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7e36cc9d416881d2e24f9a963be5fb1cd90966419ac844274161d10488b3e825"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") "alloc")
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") "android-tzdata")
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") "clock")
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") "iana-time-zone")
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") "now")
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") "std")
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") "winapi")
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") "windows-targets")
    ];
    dependencies = {
      ${ if (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") && hostPlatform.parsed.kernel.name == "android" then "android_tzdata" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".android-tzdata."0.1.1" { inherit profileName; }).out;
      ${ if (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") && hostPlatform.isUnix then "iana_time_zone" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iana-time-zone."0.1.61" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" then "num_traits" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
      ${ if (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") && hostPlatform.isWindows then "windows_targets" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cipher."0.4.4" = overridableMkRustCrate (profileName: rec {
    name = "cipher";
    version = "0.4.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "773f3b9af64447d2ce9850330c473515014aa235e6a783b02db81ff39e4a3dad"; };
    features = builtins.concatLists [
      [ "block-padding" ]
    ];
    dependencies = {
      crypto_common = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crypto-common."0.1.6" { inherit profileName; }).out;
      inout = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".inout."0.1.3" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".clap."4.5.27" = overridableMkRustCrate (profileName: rec {
    name = "clap";
    version = "4.5.27";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "769b0145982b4b48713e01ec42d61614425f27b7058bda7180a3a41f30104796"; };
    features = builtins.concatLists [
      [ "color" ]
      [ "default" ]
      [ "derive" ]
      [ "error-context" ]
      [ "help" ]
      [ "std" ]
      [ "suggestions" ]
      [ "usage" ]
    ];
    dependencies = {
      clap_builder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap_builder."4.5.27" { inherit profileName; }).out;
      clap_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".clap_derive."4.5.24" { profileName = "__noProfile"; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".clap_builder."4.5.27" = overridableMkRustCrate (profileName: rec {
    name = "clap_builder";
    version = "4.5.27";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1b26884eb4b57140e4d2d93652abfa49498b938b3c9179f9fc487b0acc3edad7"; };
    features = builtins.concatLists [
      [ "color" ]
      [ "error-context" ]
      [ "help" ]
      [ "std" ]
      [ "suggestions" ]
      [ "usage" ]
    ];
    dependencies = {
      anstream = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstream."0.6.18" { inherit profileName; }).out;
      anstyle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle."1.0.10" { inherit profileName; }).out;
      clap_lex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap_lex."0.7.4" { inherit profileName; }).out;
      strsim = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".strsim."0.11.1" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".clap_derive."4.5.24" = overridableMkRustCrate (profileName: rec {
    name = "clap_derive";
    version = "4.5.24";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "54b755194d6389280185988721fffba69495eed5ee9feeee9a599b53db80318c"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      heck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.5.0" { inherit profileName; }).out;
      proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.93" { inherit profileName; }).out;
      quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" { inherit profileName; }).out;
      syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.96" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".clap_lex."0.7.4" = overridableMkRustCrate (profileName: rec {
    name = "clap_lex";
    version = "0.7.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f46ad14479a25103f283c0f10005961cf086d8dc42205bb44c46ac563475dca6"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".color_quant."1.1.0" = overridableMkRustCrate (profileName: rec {
    name = "color_quant";
    version = "1.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3d7b894f5411737b7867f4827955924d7c254fc9f4d91a6aad6b097804b1018b"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".colorchoice."1.0.3" = overridableMkRustCrate (profileName: rec {
    name = "colorchoice";
    version = "1.0.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5b63caa9aa9397e2d9480a9b13673856c78d8ac123288526c37d7839f2a86990"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.7" = overridableMkRustCrate (profileName: rec {
    name = "core-foundation-sys";
    version = "0.8.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "773648b94d0e5d620f64f280777445740e61fe701025087ec8b57f45c791888b"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") "default")
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") "link")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".core2."0.4.0" = overridableMkRustCrate (profileName: rec {
    name = "core2";
    version = "0.4.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b49ba7ef1ad6107f8824dbe97de947cbaac53c44e7f9756a1fba0d37c1eec505"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "std" ]
    ];
    dependencies = {
      memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".cpufeatures."0.2.17" = overridableMkRustCrate (profileName: rec {
    name = "cpufeatures";
    version = "0.2.17";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "59ed5838eebb26a2bb2e58f6d5b5316989ae9d08bab10e0e6d103e656d1b0280"; };
    dependencies = {
      ${ if hostPlatform.config == "aarch64-linux-android" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.vendor.name == "apple" || hostPlatform.parsed.cpu.name == "loongarch64" && hostPlatform.parsed.kernel.name == "linux" then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.169" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.4.2" = overridableMkRustCrate (profileName: rec {
    name = "crc32fast";
    version = "1.4.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a97769d94ddab943e4510d138150169a2758b5ef3eb191a9ee688de3e23ef7b3"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.8.6" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-deque";
    version = "0.8.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9dd111b7b7f7d55b72c0a6ae361660ee5853c9af73f70c3c2ef6858b950e2e51"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" || rootFeatures' ? "lopdf/rayon") "default")
      (lib.optional (rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" || rootFeatures' ? "lopdf/rayon") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" || rootFeatures' ? "lopdf/rayon" then "crossbeam_epoch" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.9.18" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" || rootFeatures' ? "lopdf/rayon" then "crossbeam_utils" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.21" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.9.18" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-epoch";
    version = "0.9.18";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" || rootFeatures' ? "lopdf/rayon") "alloc")
      (lib.optional (rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" || rootFeatures' ? "lopdf/rayon") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" || rootFeatures' ? "lopdf/rayon" then "crossbeam_utils" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.21" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.21" = overridableMkRustCrate (profileName: rec {
    name = "crossbeam-utils";
    version = "0.8.21";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d0a5c400df2834b80a4c3327b3aad3a4c4cd4de0629063962b03235697506a28"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" || rootFeatures' ? "lopdf/rayon") "default")
      (lib.optional (rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" || rootFeatures' ? "lopdf/rayon") "std")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crunchy."0.2.3" = overridableMkRustCrate (profileName: rec {
    name = "crunchy";
    version = "0.2.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "43da5946c66ffcc7745f48db692ffbb10a83bfe0afd96235c5c2a4fb23994929"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "limit_128")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".crypto-common."0.1.6" = overridableMkRustCrate (profileName: rec {
    name = "crypto-common";
    version = "0.1.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
    dependencies = {
      generic_array = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.7" { inherit profileName; }).out;
      typenum = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.17.0" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".dary_heap."0.3.7" = overridableMkRustCrate (profileName: rec {
    name = "dary_heap";
    version = "0.3.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "04d2cd9c18b9f454ed67da600630b021a8a80bf33f8c95896ab33aaf1c26b728"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".deranged."0.3.11" = overridableMkRustCrate (profileName: rec {
    name = "deranged";
    version = "0.3.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "powerfmt" ]
      [ "std" ]
    ];
    dependencies = {
      powerfmt = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".powerfmt."0.2.0" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" = overridableMkRustCrate (profileName: rec {
    name = "digest";
    version = "0.10.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "block-buffer" ]
      [ "core-api" ]
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      block_buffer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.10.4" { inherit profileName; }).out;
      crypto_common = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crypto-common."0.1.6" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".dirs."5.0.1" = overridableMkRustCrate (profileName: rec {
    name = "dirs";
    version = "5.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "44c45a9d03d6676652bcb5e724c7e988de1acad23a711b5217ab9cbecbec2225"; };
    dependencies = {
      dirs_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs-sys."0.4.1" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".dirs-sys."0.4.1" = overridableMkRustCrate (profileName: rec {
    name = "dirs-sys";
    version = "0.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "520f05a5cbd335fae5a99ff7a6ab8627577660ee5cfd6a94a6a929b52ff0321c"; };
    dependencies = {
      ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.169" { inherit profileName; }).out;
      option_ext = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".option-ext."0.2.0" { inherit profileName; }).out;
      ${ if hostPlatform.parsed.kernel.name == "redox" then "redox_users" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_users."0.4.6" { inherit profileName; }).out;
      ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".either."1.13.0" = overridableMkRustCrate (profileName: rec {
    name = "either";
    version = "1.13.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "60b1af1c220855b6ceac025d3f6ecdd2b7c4894bfe9cd9bda4fbb4bc7c0d4cf0"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "use_std")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".encoding."0.2.33" = overridableMkRustCrate (profileName: rec {
    name = "encoding";
    version = "0.2.33";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6b0d943856b990d12d3b55b359144ff341533e516d94098b1d3fc1ac666d36ec"; };
    dependencies = {
      encoding_index_japanese = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding-index-japanese."1.20141219.5" { inherit profileName; }).out;
      encoding_index_korean = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding-index-korean."1.20141219.5" { inherit profileName; }).out;
      encoding_index_simpchinese = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding-index-simpchinese."1.20141219.5" { inherit profileName; }).out;
      encoding_index_singlebyte = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding-index-singlebyte."1.20141219.5" { inherit profileName; }).out;
      encoding_index_tradchinese = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding-index-tradchinese."1.20141219.5" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".encoding-index-japanese."1.20141219.5" = overridableMkRustCrate (profileName: rec {
    name = "encoding-index-japanese";
    version = "1.20141219.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "04e8b2ff42e9a05335dbf8b5c6f7567e5591d0d916ccef4e0b1710d32a0d0c91"; };
    dependencies = {
      encoding_index_tests = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding_index_tests."0.1.4" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".encoding-index-korean."1.20141219.5" = overridableMkRustCrate (profileName: rec {
    name = "encoding-index-korean";
    version = "1.20141219.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4dc33fb8e6bcba213fe2f14275f0963fd16f0a02c878e3095ecfdf5bee529d81"; };
    dependencies = {
      encoding_index_tests = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding_index_tests."0.1.4" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".encoding-index-simpchinese."1.20141219.5" = overridableMkRustCrate (profileName: rec {
    name = "encoding-index-simpchinese";
    version = "1.20141219.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d87a7194909b9118fc707194baa434a4e3b0fb6a5a757c73c3adb07aa25031f7"; };
    dependencies = {
      encoding_index_tests = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding_index_tests."0.1.4" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".encoding-index-singlebyte."1.20141219.5" = overridableMkRustCrate (profileName: rec {
    name = "encoding-index-singlebyte";
    version = "1.20141219.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3351d5acffb224af9ca265f435b859c7c01537c0849754d3db3fdf2bfe2ae84a"; };
    dependencies = {
      encoding_index_tests = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding_index_tests."0.1.4" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".encoding-index-tradchinese."1.20141219.5" = overridableMkRustCrate (profileName: rec {
    name = "encoding-index-tradchinese";
    version = "1.20141219.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fd0e20d5688ce3cab59eb3ef3a2083a5c77bf496cb798dc6fcdb75f323890c18"; };
    dependencies = {
      encoding_index_tests = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding_index_tests."0.1.4" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".encoding_index_tests."0.1.4" = overridableMkRustCrate (profileName: rec {
    name = "encoding_index_tests";
    version = "0.1.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a246d82be1c9d791c5dfde9a2bd045fc3cbba3fa2b11ad558f27d01712f00569"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".encoding_rs."0.8.35" = overridableMkRustCrate (profileName: rec {
    name = "encoding_rs";
    version = "0.8.35";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "75030f3c4f45dafd7586dd6780965a8c7e8e285a5ecb86713e63a79c5b2766f3"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "default" ]
    ];
    dependencies = {
      cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".env_filter."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "env_filter";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "186e05a59d4c50738528153b83b0b0194d3a29507dfec16eccd4b342903397d0"; };
    features = builtins.concatLists [
      [ "regex" ]
    ];
    dependencies = {
      log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.25" { inherit profileName; }).out;
      regex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.11.1" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".env_logger."0.11.6" = overridableMkRustCrate (profileName: rec {
    name = "env_logger";
    version = "0.11.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "dcaee3d8e3cfc3fd92428d477bc97fc29ec8716d180c0d74c643bb26166660e0"; };
    features = builtins.concatLists [
      [ "auto-color" ]
      [ "color" ]
      [ "default" ]
      [ "humantime" ]
      [ "regex" ]
    ];
    dependencies = {
      anstream = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstream."0.6.18" { inherit profileName; }).out;
      anstyle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle."1.0.10" { inherit profileName; }).out;
      env_filter = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_filter."0.1.3" { inherit profileName; }).out;
      humantime = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".humantime."2.1.0" { inherit profileName; }).out;
      log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.25" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".equivalent."1.0.1" = overridableMkRustCrate (profileName: rec {
    name = "equivalent";
    version = "1.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".errno."0.3.10" = overridableMkRustCrate (profileName: rec {
    name = "errno";
    version = "0.3.10";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "33d852cb9b869c2a9b3df2f71a3074817f01e1844f839a144f5fcef059a4eb5d"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
    dependencies = {
      ${ if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "hermit" || hostPlatform.parsed.kernel.name == "wasi" then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.169" { inherit profileName; }).out;
      ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".exr."1.73.0" = overridableMkRustCrate (profileName: rec {
    name = "exr";
    version = "1.73.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f83197f59927b46c04a183a619b7c29df34e63e63c7869320862268c0ef687e0"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "bit_field" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bit_field."0.10.2" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "half" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".half."2.4.1" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "lebe" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lebe."0.5.2" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "miniz_oxide" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.8.3" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "rayon_core" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.12.1" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "smallvec" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "zune_inflate" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zune-inflate."0.2.54" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fastrand."2.3.0" = overridableMkRustCrate (profileName: rec {
    name = "fastrand";
    version = "2.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "37909eebbb50d72f9059c3b6d82c0463f2ff062c9e95845c43a6c9c0355411be"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".fdeflate."0.3.7" = overridableMkRustCrate (profileName: rec {
    name = "fdeflate";
    version = "0.3.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1e6853b52649d4ac5c0bd02320cddc5ba956bdb407c4b75a2c6b75bf51500f8c"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "simd_adler32" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".simd-adler32."0.3.7" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.35" = overridableMkRustCrate (profileName: rec {
    name = "flate2";
    version = "1.0.35";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c936bfdafb507ebbf50b8074c54fa31c5be9a1e7e5f467dd659697041407d07c"; };
    features = builtins.concatLists [
      [ "any_impl" ]
      [ "default" ]
      [ "miniz_oxide" ]
      [ "rust_backend" ]
    ];
    dependencies = {
      crc32fast = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.4.2" { inherit profileName; }).out;
      miniz_oxide = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.8.3" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.7" = overridableMkRustCrate (profileName: rec {
    name = "generic-array";
    version = "0.14.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a"; };
    features = builtins.concatLists [
      [ "more_lengths" ]
    ];
    dependencies = {
      typenum = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.17.0" { inherit profileName; }).out;
    };
    buildDependencies = {
      version_check = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.5" { profileName = "__noProfile"; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.15" = overridableMkRustCrate (profileName: rec {
    name = "getrandom";
    version = "0.2.15";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
    dependencies = {
      cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
      ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.169" { inherit profileName; }).out;
      ${ if hostPlatform.parsed.kernel.name == "wasi" then "wasi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".getrandom."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "getrandom";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "43a49c392881ce6d5c3b8cb70f98717b7c07aabbdff06687b9030dbfbe2725f8"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
    dependencies = {
      cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
      ${ if hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "dragonfly" || hostPlatform.parsed.kernel.name == "freebsd" || hostPlatform.parsed.kernel.name == "hurd" || hostPlatform.parsed.kernel.name == "illumos" || hostPlatform.parsed.kernel.name == "horizon" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l") || hostPlatform.parsed.kernel.name == "haiku" || hostPlatform.parsed.kernel.name == "redox" || hostPlatform.parsed.kernel.name == "nto" || hostPlatform.parsed.kernel.name == "aix" || hostPlatform.parsed.kernel.name == "ios" || hostPlatform.parsed.kernel.name == "visionos" || hostPlatform.parsed.kernel.name == "watchos" || hostPlatform.parsed.kernel.name == "tvos" || hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "openbsd" || hostPlatform.parsed.kernel.name == "vita" || hostPlatform.parsed.kernel.name == "emscripten" || hostPlatform.parsed.kernel.name == "netbsd" || hostPlatform.parsed.kernel.name == "solaris" || hostPlatform.parsed.kernel.name == "vxworks" then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.169" { inherit profileName; }).out;
      ${ if hostPlatform.parsed.cpu.name == "wasm32" && hostPlatform.parsed.kernel.name == "wasi" && hostPlatform.parsed.abi.name == "p2" then "wasi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.13.3+wasi-0.2.2" { inherit profileName; }).out;
      ${ if hostPlatform.isWindows && !(hostPlatform.parsed.vendor.name == "win7") then "windows_targets" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".gif."0.13.1" = overridableMkRustCrate (profileName: rec {
    name = "gif";
    version = "0.13.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3fb2d69b19215e18bb912fa30f7ce15846e301408695e44e0ef719f1da9e19f2"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "color_quant")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "raii_no_panic")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "color_quant" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".color_quant."1.1.0" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "weezl" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".weezl."0.1.8" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".gimli."0.31.1" = overridableMkRustCrate (profileName: rec {
    name = "gimli";
    version = "0.31.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "07e28edb80900c19c28f1072f2e8aeca7fa06b23cd4169cefe1af5aa3260783f"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") "read")
      (lib.optional (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") "read-core")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".half."2.4.1" = overridableMkRustCrate (profileName: rec {
    name = "half";
    version = "2.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6dd08c532ae367adf81c312a4580bc67f1d0fe8bc9c460520283f4c0ff277888"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "alloc")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "cfg_if" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
      ${ if (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") && hostPlatform.parsed.cpu.name == "spirv" then "crunchy" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crunchy."0.2.3" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.14.5" = overridableMkRustCrate (profileName: rec {
    name = "hashbrown";
    version = "0.14.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1"; };
    features = builtins.concatLists [
      [ "ahash" ]
      [ "allocator-api2" ]
      [ "default" ]
      [ "inline-more" ]
    ];
    dependencies = {
      ahash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ahash."0.8.11" { inherit profileName; }).out;
      allocator_api2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".allocator-api2."0.2.21" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.15.2" = overridableMkRustCrate (profileName: rec {
    name = "hashbrown";
    version = "0.15.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "bf151400ff0baff5465007dd2f3e717f3fe502074ca563069ce3a6629d07b289"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".heck."0.5.0" = overridableMkRustCrate (profileName: rec {
    name = "heck";
    version = "0.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".humantime."2.1.0" = overridableMkRustCrate (profileName: rec {
    name = "humantime";
    version = "2.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".iana-time-zone."0.1.61" = overridableMkRustCrate (profileName: rec {
    name = "iana-time-zone";
    version = "0.1.61";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "235e081f3925a06703c2d0117ea8b91f042756fd6e7a6e5d901e8ca1a996b220"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") "fallback")
    ];
    dependencies = {
      ${ if (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") && hostPlatform.parsed.kernel.name == "android" then "android_system_properties" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".android_system_properties."0.1.5" { inherit profileName; }).out;
      ${ if (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") && (hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "core_foundation_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.8.7" { inherit profileName; }).out;
      ${ if (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") && hostPlatform.parsed.kernel.name == "haiku" then "iana_time_zone_haiku" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".iana-time-zone-haiku."0.1.2" { inherit profileName; }).out;
      ${ if (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") && hostPlatform.parsed.cpu.name == "wasm32" && hostPlatform.parsed.kernel.name == "unknown" then "js_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.77" { inherit profileName; }).out;
      ${ if (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") && hostPlatform.parsed.cpu.name == "wasm32" && hostPlatform.parsed.kernel.name == "unknown" then "wasm_bindgen" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.100" { inherit profileName; }).out;
      ${ if (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") && hostPlatform.parsed.kernel.name == "windows" then "windows_core" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-core."0.52.0" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".iana-time-zone-haiku."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "iana-time-zone-haiku";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f"; };
    buildDependencies = {
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" then "cc" else null } = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.2.10" { profileName = "__noProfile"; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".image."0.25.5" = overridableMkRustCrate (profileName: rec {
    name = "image";
    version = "0.25.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cd6f44aed642f18953a158afeb30206f4d50da59fbc66ecb53c66488de73563b"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "avif")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "bmp")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "dds")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default-formats")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "exr")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "ff")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "gif")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "hdr")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "ico")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "jpeg")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "png")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "pnm")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "qoi")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "rayon")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "tga")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "tiff")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "webp")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "bytemuck" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.21.0" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "byteorder_lite" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder-lite."0.1.0" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "color_quant" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".color_quant."1.1.0" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "exr" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".exr."1.73.0" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "gif" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gif."0.13.1" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "image_webp" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".image-webp."0.2.1" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "num_traits" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "png" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".png."0.17.16" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "qoi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".qoi."0.4.1" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "ravif" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ravif."0.11.11" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "rayon" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.10.0" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "rgb" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rgb."0.8.50" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "tiff" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tiff."0.9.1" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "zune_core" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zune-core."0.4.12" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "zune_jpeg" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zune-jpeg."0.4.14" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".image-webp."0.2.1" = overridableMkRustCrate (profileName: rec {
    name = "image-webp";
    version = "0.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b77d01e822461baa8409e156015a1d91735549f0f2c17691bd2d996bef238f7f"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "byteorder_lite" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder-lite."0.1.0" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "quick_error" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-error."2.0.1" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".imgref."1.11.0" = overridableMkRustCrate (profileName: rec {
    name = "imgref";
    version = "1.11.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d0263a3d970d5c054ed9312c0057b4f3bde9c0b33836d3637361d4a9e6e7a408"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "deprecated")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".indexmap."2.7.1" = overridableMkRustCrate (profileName: rec {
    name = "indexmap";
    version = "2.7.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8c9c992b02b5b4c94ea26e32fe5bccb7aa7d9f390ab5c1221ff895bc7ea8b652"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      equivalent = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".equivalent."1.0.1" { inherit profileName; }).out;
      hashbrown = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.15.2" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".inout."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "inout";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a0c10553d664a4d0bcff9f4215d0aac67a639cc68ef660840afe309b807bc9f5"; };
    features = builtins.concatLists [
      [ "block-padding" ]
    ];
    dependencies = {
      block_padding = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".block-padding."0.3.3" { inherit profileName; }).out;
      generic_array = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.7" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".interpolate_name."0.2.4" = overridableMkRustCrate (profileName: rec {
    name = "interpolate_name";
    version = "0.2.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c34819042dc3d3971c46c2190835914dfbe0c3c13f61449b2997f4e9722dfa60"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "proc_macro2" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.93" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "quote" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "syn" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.96" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".is_terminal_polyfill."1.70.1" = overridableMkRustCrate (profileName: rec {
    name = "is_terminal_polyfill";
    version = "1.70.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".itertools."0.12.1" = overridableMkRustCrate (profileName: rec {
    name = "itertools";
    version = "0.12.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ba291022dbbd398a455acf126c1e341954079855bc60dfdda641363bd6922569"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "use_alloc")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "use_std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "either" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.13.0" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.14" = overridableMkRustCrate (profileName: rec {
    name = "itoa";
    version = "1.0.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d75a2a4b1b190afb6f5425f10f6a8f959d2ea0b9c2b1d79553551850539e4674"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jobserver."0.1.32" = overridableMkRustCrate (profileName: rec {
    name = "jobserver";
    version = "0.1.32";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "48d1dbcbbeb6a7fec7e059840aa538bd62aaccf972c7346c4d9d2059312853d0"; };
    dependencies = {
      ${ if (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") && hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.169" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".jpeg-decoder."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "jpeg-decoder";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f5d4a7da358eff58addd2877a45865158f0d78c911d43a5784ceb7bbf52833b0"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.77" = overridableMkRustCrate (profileName: rec {
    name = "js-sys";
    version = "0.3.77";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1cfaf33c695fc6e08064efbc1f72ec937429614f25eef83af942d0e227c3a28f"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") "default")
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" then "once_cell" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" then "wasm_bindgen" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.100" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".lebe."0.5.2" = overridableMkRustCrate (profileName: rec {
    name = "lebe";
    version = "0.5.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "03087c2bad5e1034e8cace5926dec053fb3790248370865f5117a7d0213354c8"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".libc."0.2.169" = overridableMkRustCrate (profileName: rec {
    name = "libc";
    version = "0.2.169";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b5aba8db14291edd000dfcc4d620c7ebfb122c613afb886ca8803fa4e128a20a"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "extra_traits" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".libflate."2.1.0" = overridableMkRustCrate (profileName: rec {
    name = "libflate";
    version = "2.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "45d9dfdc14ea4ef0900c1cddbc8dcd553fbaacd8a4a282cf4018ae9dd04fb21e"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      adler32 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".adler32."1.2.0" { inherit profileName; }).out;
      core2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core2."0.4.0" { inherit profileName; }).out;
      crc32fast = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.4.2" { inherit profileName; }).out;
      dary_heap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dary_heap."0.3.7" { inherit profileName; }).out;
      libflate_lz77 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libflate_lz77."2.1.0" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".libflate_lz77."2.1.0" = overridableMkRustCrate (profileName: rec {
    name = "libflate_lz77";
    version = "2.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e6e0d73b369f386f1c44abd9c570d5318f55ccde816ff4b562fa452e5182863d"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
    dependencies = {
      core2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".core2."0.4.0" { inherit profileName; }).out;
      hashbrown = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.14.5" { inherit profileName; }).out;
      rle_decode_fast = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rle-decode-fast."1.0.3" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".libfuzzer-sys."0.4.9" = overridableMkRustCrate (profileName: rec {
    name = "libfuzzer-sys";
    version = "0.4.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cf78f52d400cf2d84a3a973a78a592b4adc535739e0a5597a0da6f0c357adc75"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "link_libfuzzer")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "arbitrary" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".arbitrary."1.4.1" { inherit profileName; }).out;
    };
    buildDependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "cc" else null } = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.2.10" { profileName = "__noProfile"; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".libredox."0.1.3" = overridableMkRustCrate (profileName: rec {
    name = "libredox";
    version = "0.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "c0ff37bd590ca25063e35af745c343cb7a0271906fb7b37e4813e8f79f00268d"; };
    features = builtins.concatLists [
      [ "call" ]
      [ "std" ]
    ];
    dependencies = {
      bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.8.0" { inherit profileName; }).out;
      libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.169" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".linux-raw-sys."0.4.15" = overridableMkRustCrate (profileName: rec {
    name = "linux-raw-sys";
    version = "0.4.15";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d26c52dbd32dccf2d10cac7725f8eae5296885fb5703b261f7d0a0739ec807ab"; };
    features = builtins.concatLists [
      [ "elf" ]
      [ "errno" ]
      [ "general" ]
      [ "ioctl" ]
      [ "no_std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".log."0.4.25" = overridableMkRustCrate (profileName: rec {
    name = "log";
    version = "0.4.25";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "04cbf5b083de1c7e0222a7a51dbfdba1cbe1c6ab0b15e29fff3f6c077fd9cd9f"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".loop9."0.1.5" = overridableMkRustCrate (profileName: rec {
    name = "loop9";
    version = "0.1.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0fae87c125b03c1d2c0150c90365d7d6bcc53fb73a9acaef207d2d065860f062"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "imgref" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".imgref."1.11.0" { inherit profileName; }).out;
    };
  });
  
  "unknown".lopdf."0.35.0" = overridableMkRustCrate (profileName: rec {
    name = "lopdf";
    version = "0.35.0";
    registry = "unknown";
    src = fetchCrateLocal workspaceSrc;
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/async") "async")
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") "chrono")
      (lib.optional (rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") "chrono_time")
      (lib.optional (rootFeatures' ? "lopdf/default") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image") "embed_image")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "image")
      (lib.optional (rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/nom" || rootFeatures' ? "lopdf/nom_parser") "nom")
      (lib.optional (rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/nom_locate" || rootFeatures' ? "lopdf/nom_parser") "nom_locate")
      (lib.optional (rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/nom_parser") "nom_parser")
      (lib.optional (rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/rayon") "rayon")
      (lib.optional (rootFeatures' ? "lopdf/serde") "serde")
      (lib.optional (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") "tokio")
    ];
    dependencies = {
      aes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".aes."0.8.4" { inherit profileName; }).out;
      cbc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cbc."0.1.2" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" then "chrono" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.39" { inherit profileName; }).out;
      encoding = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding."0.2.33" { inherit profileName; }).out;
      encoding_rs = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding_rs."0.8.35" { inherit profileName; }).out;
      flate2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.35" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "image" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".image."0.25.5" { inherit profileName; }).out;
      indexmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.7.1" { inherit profileName; }).out;
      itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.14" { inherit profileName; }).out;
      libflate = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libflate."2.1.0" { inherit profileName; }).out;
      log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.25" { inherit profileName; }).out;
      md5 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".md-5."0.10.6" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/nom" || rootFeatures' ? "lopdf/nom_parser" then "nom" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".nom."7.1.3" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/nom_locate" || rootFeatures' ? "lopdf/nom_parser" then "nom_locate" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".nom_locate."4.2.0" { inherit profileName; }).out;
      rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.9.0" { inherit profileName; }).out;
      rangemap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rangemap."1.5.1" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/rayon" then "rayon" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.10.0" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/serde" then "serde" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.217" { inherit profileName; }).out;
      thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."2.0.11" { inherit profileName; }).out;
      time = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.37" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio" then "tokio" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.43.0" { inherit profileName; }).out;
      weezl = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".weezl."0.1.8" { inherit profileName; }).out;
    };
    devDependencies = {
      clap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."4.5.27" { inherit profileName; }).out;
      env_logger = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.11.6" { inherit profileName; }).out;
      serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.138" { inherit profileName; }).out;
      shellexpand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".shellexpand."3.1.0" { inherit profileName; }).out;
      tempfile = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.16.0" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".maybe-rayon."0.1.1" = overridableMkRustCrate (profileName: rec {
    name = "maybe-rayon";
    version = "0.1.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8ea1f30cedd69f0a2954655f7188c6a834246d2bcf1e315e2ac40c4b24dc9519"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "rayon")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "threads")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "cfg_if" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "rayon" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.10.0" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".md-5."0.10.6" = overridableMkRustCrate (profileName: rec {
    name = "md-5";
    version = "0.10.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d89e7ee0cfbedfc4da3340218492196241d89eefb6dab27de5df917a6d2e78cf"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
      digest = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.10.7" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" = overridableMkRustCrate (profileName: rec {
    name = "memchr";
    version = "2.7.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "std" ]
      (lib.optional (rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/nom_locate" || rootFeatures' ? "lopdf/nom_parser") "use_std")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".minimal-lexical."0.2.1" = overridableMkRustCrate (profileName: rec {
    name = "minimal-lexical";
    version = "0.2.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" || rootFeatures' ? "lopdf/nom" || rootFeatures' ? "lopdf/nom_locate" || rootFeatures' ? "lopdf/nom_parser") "std")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.8.3" = overridableMkRustCrate (profileName: rec {
    name = "miniz_oxide";
    version = "0.8.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b8402cab7aefae129c6977bb0ff1b8fd9a04eb5b51efc50a70bea51cda0c7924"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "simd")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "simd-adler32")
      [ "with-alloc" ]
    ];
    dependencies = {
      adler2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".adler2."2.0.0" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "simd_adler32" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".simd-adler32."0.3.7" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".new_debug_unreachable."1.0.6" = overridableMkRustCrate (profileName: rec {
    name = "new_debug_unreachable";
    version = "1.0.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "650eef8c711430f1a879fdd01d4745a7deea475becfb90269c06775983bbf086"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".nom."7.1.3" = overridableMkRustCrate (profileName: rec {
    name = "nom";
    version = "7.1.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" || rootFeatures' ? "lopdf/nom" || rootFeatures' ? "lopdf/nom_locate" || rootFeatures' ? "lopdf/nom_parser") "alloc")
      (lib.optional (rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" || rootFeatures' ? "lopdf/nom" || rootFeatures' ? "lopdf/nom_parser") "default")
      (lib.optional (rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" || rootFeatures' ? "lopdf/nom" || rootFeatures' ? "lopdf/nom_locate" || rootFeatures' ? "lopdf/nom_parser") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" || rootFeatures' ? "lopdf/nom" || rootFeatures' ? "lopdf/nom_locate" || rootFeatures' ? "lopdf/nom_parser" then "memchr" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" || rootFeatures' ? "lopdf/nom" || rootFeatures' ? "lopdf/nom_locate" || rootFeatures' ? "lopdf/nom_parser" then "minimal_lexical" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".minimal-lexical."0.2.1" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".nom_locate."4.2.0" = overridableMkRustCrate (profileName: rec {
    name = "nom_locate";
    version = "4.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1e3c83c053b0713da60c5b8de47fe8e494fe3ece5267b2f23090a07a053ba8f3"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/nom_locate" || rootFeatures' ? "lopdf/nom_parser") "alloc")
      (lib.optional (rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/nom_locate" || rootFeatures' ? "lopdf/nom_parser") "default")
      (lib.optional (rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/nom_locate" || rootFeatures' ? "lopdf/nom_parser") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/nom_locate" || rootFeatures' ? "lopdf/nom_parser" then "bytecount" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytecount."0.6.8" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/nom_locate" || rootFeatures' ? "lopdf/nom_parser" then "memchr" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/nom_locate" || rootFeatures' ? "lopdf/nom_parser" then "nom" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".nom."7.1.3" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".noop_proc_macro."0.3.0" = overridableMkRustCrate (profileName: rec {
    name = "noop_proc_macro";
    version = "0.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0676bb32a98c1a483ce53e500a81ad9c3d5b3f7c920c28c24e9cb0980d0b5bc8"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num-bigint."0.4.6" = overridableMkRustCrate (profileName: rec {
    name = "num-bigint";
    version = "0.4.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a5e44f723f1133c9deac646763579fdb3ac745e418f2a7af9cd0c431da1f20b9"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "num_integer" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.46" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "num_traits" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num-conv."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "num-conv";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num-derive."0.4.2" = overridableMkRustCrate (profileName: rec {
    name = "num-derive";
    version = "0.4.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ed3955f1a9c7c0c15e092f9c887db08b1fc683305fdf6eb6684f22555355e202"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "proc_macro2" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.93" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "quote" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "syn" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.96" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.46" = overridableMkRustCrate (profileName: rec {
    name = "num-integer";
    version = "0.1.46";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7969661fd2958a5cb096e56c8e1ad0444ac2bbcd0061bd28660485a44879858f"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "i128")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "num_traits" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num-rational."0.4.2" = overridableMkRustCrate (profileName: rec {
    name = "num-rational";
    version = "0.4.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f83d14da390562dca69fc84082e73e548e1ad308d24accdedd2720017cb37824"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "num-bigint")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "num_bigint" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-bigint."0.4.6" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "num_integer" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.46" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "num_traits" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" = overridableMkRustCrate (profileName: rec {
    name = "num-traits";
    version = "0.2.19";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "i128")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std")
    ];
    buildDependencies = {
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "autocfg" else null } = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.4.0" { profileName = "__noProfile"; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".object."0.36.7" = overridableMkRustCrate (profileName: rec {
    name = "object";
    version = "0.36.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "62948e14d923ea95ea2c7c86c71013138b66525b86bdc08d2dcc262bdb497b87"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") "archive")
      (lib.optional (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") "coff")
      (lib.optional (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") "elf")
      (lib.optional (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") "macho")
      (lib.optional (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") "pe")
      (lib.optional (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") "read_core")
      (lib.optional (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") "unaligned")
      (lib.optional (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") "xcoff")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio" then "memchr" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" = overridableMkRustCrate (profileName: rec {
    name = "once_cell";
    version = "1.20.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "default" ]
      [ "race" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".option-ext."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "option-ext";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "04744f49eae99ab78e0d5c0b603ab218f515ea8cfe5a456d7629ad883a3b6e7d"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".paste."1.0.15" = overridableMkRustCrate (profileName: rec {
    name = "paste";
    version = "1.0.15";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.16" = overridableMkRustCrate (profileName: rec {
    name = "pin-project-lite";
    version = "0.2.16";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3b3cff922bd51709b605d9ead9aa71031d81447142d828eb4a6eba76fe619f9b"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.31" = overridableMkRustCrate (profileName: rec {
    name = "pkg-config";
    version = "0.3.31";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "953ec861398dccce10c670dfeaf3ec4911ca479e9c02154b3a215178c5f566f2"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".png."0.17.16" = overridableMkRustCrate (profileName: rec {
    name = "png";
    version = "0.17.16";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "82151a2fc869e011c153adc57cf2789ccb8d9906ce52c0b39a6b5697749d7526"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "bitflags" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "crc32fast" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.4.2" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "fdeflate" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fdeflate."0.3.7" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "flate2" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.35" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "miniz_oxide" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.8.3" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".powerfmt."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "powerfmt";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.20" = overridableMkRustCrate (profileName: rec {
    name = "ppv-lite86";
    version = "0.2.20";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "77957b295656769bb8ad2b6a6b09d897d94f05c41b069aede1fcdaa675eaea04"; };
    features = builtins.concatLists [
      [ "simd" ]
      [ "std" ]
    ];
    dependencies = {
      zerocopy = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zerocopy."0.7.35" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.93" = overridableMkRustCrate (profileName: rec {
    name = "proc-macro2";
    version = "1.0.93";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "60946a68e5f9d28b0dc1c21bb8a97ee7d018a8b322fa57838ba31cc878e22d99"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "proc-macro" ]
    ];
    dependencies = {
      unicode_ident = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.16" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".profiling."1.0.16" = overridableMkRustCrate (profileName: rec {
    name = "profiling";
    version = "1.0.16";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "afbdc74edc00b6f6a218ca6a5364d6226a259d4b8ea1af4a0ea063f27e179f4d"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "procmacros")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "profiling-procmacros")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "profiling_procmacros" else null } = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".profiling-procmacros."1.0.16" { profileName = "__noProfile"; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".profiling-procmacros."1.0.16" = overridableMkRustCrate (profileName: rec {
    name = "profiling-procmacros";
    version = "1.0.16";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a65f2e60fbf1063868558d69c6beacf412dc755f9fc020f514b7955fc914fe30"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "quote" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "syn" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.96" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".qoi."0.4.1" = overridableMkRustCrate (profileName: rec {
    name = "qoi";
    version = "0.4.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7f6d64c71eb498fe9eae14ce4ec935c555749aef511cca85b5568910d6e48001"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "bytemuck" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytemuck."1.21.0" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".quick-error."2.0.1" = overridableMkRustCrate (profileName: rec {
    name = "quick-error";
    version = "2.0.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a993555f31e5a609f617c12db6250dedcac1b0a85076912c436e6fc9b2c8e6a3"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" = overridableMkRustCrate (profileName: rec {
    name = "quote";
    version = "1.0.38";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0e4dccaaaf89514f546c693ddc140f729f958c247918a13380cccc6078391acc"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "proc-macro" ]
    ];
    dependencies = {
      proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.93" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" = overridableMkRustCrate (profileName: rec {
    name = "rand";
    version = "0.8.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "alloc")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "getrandom")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "libc")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "rand_chacha")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std_rng")
    ];
    dependencies = {
      ${ if (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") && hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.169" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "rand_chacha" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.3.1" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "rand_core" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "rand";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3779b94aeb87e8bd4e834cee3650289ee9e0d5677f976ecdb6d219e5f4f6cd94"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "default" ]
      [ "os_rng" ]
      [ "small_rng" ]
      [ "std" ]
      [ "std_rng" ]
      [ "thread_rng" ]
    ];
    dependencies = {
      rand_chacha = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.9.0" { inherit profileName; }).out;
      rand_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.9.0" { inherit profileName; }).out;
      zerocopy = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zerocopy."0.8.14" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.3.1" = overridableMkRustCrate (profileName: rec {
    name = "rand_chacha";
    version = "0.3.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "ppv_lite86" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.20" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "rand_core" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "rand_chacha";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d3022b5f1df60f26e1ffddd6c66e8aa15de382ae63b3a0c1bfc0e4d3e3f325cb"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
    dependencies = {
      ppv_lite86 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.20" { inherit profileName; }).out;
      rand_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.9.0" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" = overridableMkRustCrate (profileName: rec {
    name = "rand_core";
    version = "0.6.4";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "alloc")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "getrandom")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "getrandom" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.15" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.9.0" = overridableMkRustCrate (profileName: rec {
    name = "rand_core";
    version = "0.9.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b08f3c9802962f7e1b25113931d94f43ed9725bebc59db9d0c3e9a23b67e15ff"; };
    features = builtins.concatLists [
      [ "os_rng" ]
      [ "std" ]
    ];
    dependencies = {
      getrandom = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.3.1" { inherit profileName; }).out;
      zerocopy = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zerocopy."0.8.14" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rangemap."1.5.1" = overridableMkRustCrate (profileName: rec {
    name = "rangemap";
    version = "1.5.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f60fcc7d6849342eff22c4350c8b9a989ee8ceabc4b481253e8946b9fe83d684"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rav1e."0.7.1" = overridableMkRustCrate (profileName: rec {
    name = "rav1e";
    version = "0.7.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "cd87ce80a7665b1cce111f8a16c1f3929f6547ce91ade6addf4ec86a8dda5ce9"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "threading")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "wasm")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "wasm-bindgen")
    ];
    dependencies = {
      ${ if false then "arbitrary" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".arbitrary."1.4.1" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "arg_enum_proc_macro" else null } = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".arg_enum_proc_macro."0.3.4" { profileName = "__noProfile"; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "arrayvec" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.7.6" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "av1_grain" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".av1-grain."0.2.3" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "bitstream_io" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitstream-io."2.6.0" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "cfg_if" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
      ${ if false then "interpolate_name" else null } = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".interpolate_name."0.2.4" { profileName = "__noProfile"; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "itertools" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.12.1" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.169" { inherit profileName; }).out;
      ${ if false then "libfuzzer_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libfuzzer-sys."0.4.9" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "log" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.25" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "rayon" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".maybe-rayon."0.1.1" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "debug_unreachable" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".new_debug_unreachable."1.0.6" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "noop_proc_macro" else null } = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".noop_proc_macro."0.3.0" { profileName = "__noProfile"; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "num_derive" else null } = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".num-derive."0.4.2" { profileName = "__noProfile"; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "num_traits" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "once_cell" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "paste" else null } = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".paste."1.0.15" { profileName = "__noProfile"; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "profiling" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".profiling."1.0.16" { inherit profileName; }).out;
      ${ if false then "rand" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
      ${ if false then "rand_chacha" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.3.1" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "simd_helpers" else null } = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".simd_helpers."0.1.0" { profileName = "__noProfile"; }).out;
      ${ if false then "system_deps" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".system-deps."6.2.2" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "thiserror" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.69" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "v_frame" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".v_frame."0.3.8" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "wasm_bindgen" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.100" { inherit profileName; }).out;
    };
    buildDependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "built" else null } = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".built."0.7.5" { profileName = "__noProfile"; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ravif."0.11.11" = overridableMkRustCrate (profileName: rec {
    name = "ravif";
    version = "0.11.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2413fd96bd0ea5cdeeb37eaf446a22e6ed7b981d792828721e74ded1980a45c6"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "threading")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "avif_serialize" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".avif-serialize."0.8.2" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "imgref" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".imgref."1.11.0" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "loop9" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".loop9."0.1.5" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "quick_error" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-error."2.0.1" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "rav1e" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rav1e."0.7.1" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "rayon" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.10.0" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "rgb" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rgb."0.8.50" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rayon."1.10.0" = overridableMkRustCrate (profileName: rec {
    name = "rayon";
    version = "1.10.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b418a60154510ca1a002a752ca9714984e21e4241e804d32555251faf8b78ffa"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" || rootFeatures' ? "lopdf/rayon" then "either" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.13.0" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" || rootFeatures' ? "lopdf/rayon" then "rayon_core" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.12.1" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.12.1" = overridableMkRustCrate (profileName: rec {
    name = "rayon-core";
    version = "1.12.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" || rootFeatures' ? "lopdf/rayon" then "crossbeam_deque" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.8.6" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" || rootFeatures' ? "lopdf/rayon" then "crossbeam_utils" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.21" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".redox_users."0.4.6" = overridableMkRustCrate (profileName: rec {
    name = "redox_users";
    version = "0.4.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ba009ff324d1fc1b900bd1fdb31564febe58a8ccc8a6fdbb93b543d33b13ca43"; };
    dependencies = {
      getrandom = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.15" { inherit profileName; }).out;
      libredox = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libredox."0.1.3" { inherit profileName; }).out;
      thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.69" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".regex."1.11.1" = overridableMkRustCrate (profileName: rec {
    name = "regex";
    version = "1.11.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b544ef1b4eac5dc2db33ea63606ae9ffcfac26c1416a2806ae0bf5f56b201191"; };
    features = builtins.concatLists [
      [ "perf" ]
      [ "perf-backtrack" ]
      [ "perf-cache" ]
      [ "perf-dfa" ]
      [ "perf-inline" ]
      [ "perf-literal" ]
      [ "perf-onepass" ]
      [ "std" ]
    ];
    dependencies = {
      aho_corasick = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."1.1.3" { inherit profileName; }).out;
      memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
      regex_automata = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.4.9" { inherit profileName; }).out;
      regex_syntax = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.8.5" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.4.9" = overridableMkRustCrate (profileName: rec {
    name = "regex-automata";
    version = "0.4.9";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "809e8dc61f6de73b46c85f4c96486310fe304c434cfa43669d7b40f711150908"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "dfa-onepass" ]
      [ "hybrid" ]
      [ "meta" ]
      [ "nfa-backtrack" ]
      [ "nfa-pikevm" ]
      [ "nfa-thompson" ]
      [ "perf-inline" ]
      [ "perf-literal" ]
      [ "perf-literal-multisubstring" ]
      [ "perf-literal-substring" ]
      [ "std" ]
      [ "syntax" ]
    ];
    dependencies = {
      aho_corasick = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."1.1.3" { inherit profileName; }).out;
      memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
      regex_syntax = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.8.5" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.8.5" = overridableMkRustCrate (profileName: rec {
    name = "regex-syntax";
    version = "0.8.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2b15c43186be67a4fd63bee50d0303afffcef381492ebe2c5d87f324e1b8815c"; };
    features = builtins.concatLists [
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rgb."0.8.50" = overridableMkRustCrate (profileName: rec {
    name = "rgb";
    version = "0.8.50";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "57397d16646700483b67d2dd6511d79318f9d057fdbd21a4066aeac8b41d310a"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rle-decode-fast."1.0.3" = overridableMkRustCrate (profileName: rec {
    name = "rle-decode-fast";
    version = "1.0.3";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3582f63211428f83597b51b2ddb88e2a91a9d52d12831f9d08f5e624e8977422"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.24" = overridableMkRustCrate (profileName: rec {
    name = "rustc-demangle";
    version = "0.1.24";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "719b953e2095829ee67db738b3bfa9fa368c94900df327b3f07fe6e794d2fe1f"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.44" = overridableMkRustCrate (profileName: rec {
    name = "rustix";
    version = "0.38.44";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fdb5bc1ae2baa591800df16c9ca78619bf65c0488b41b96ccec5d11220d8c154"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "default" ]
      [ "fs" ]
      [ "libc-extra-traits" ]
      [ "std" ]
      [ "use-libc-auxv" ]
    ];
    dependencies = {
      bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.8.0" { inherit profileName; }).out;
      ${ if hostPlatform.parsed.kernel.name == "linux" && (hostPlatform.parsed.cpu.significantByte == "littleEndian" || hostPlatform.parsed.cpu.name == "s390x") && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64) || !hostPlatform.isWindows && !(hostPlatform.parsed.kernel.name == "linux" && (hostPlatform.parsed.cpu.significantByte == "littleEndian" || hostPlatform.parsed.cpu.name == "s390x") && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64)) || hostPlatform.isWindows then "libc_errno" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".errno."0.3.10" { inherit profileName; }).out;
      ${ if hostPlatform.parsed.kernel.name == "linux" && (hostPlatform.parsed.cpu.significantByte == "littleEndian" || hostPlatform.parsed.cpu.name == "s390x") && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64) || !hostPlatform.isWindows && !(hostPlatform.parsed.kernel.name == "linux" && (hostPlatform.parsed.cpu.significantByte == "littleEndian" || hostPlatform.parsed.cpu.name == "s390x") && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64)) then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.169" { inherit profileName; }).out;
      ${ if hostPlatform.parsed.kernel.name == "linux" && (hostPlatform.parsed.cpu.significantByte == "littleEndian" || hostPlatform.parsed.cpu.name == "s390x") && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64) || (hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "linux") && !(hostPlatform.parsed.kernel.name == "linux" && (hostPlatform.parsed.cpu.significantByte == "littleEndian" || hostPlatform.parsed.cpu.name == "s390x") && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64)) then "linux_raw_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".linux-raw-sys."0.4.15" { inherit profileName; }).out;
      ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".rustversion."1.0.19" = overridableMkRustCrate (profileName: rec {
    name = "rustversion";
    version = "1.0.19";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "f7c45b9784283f1b2e7fb61b42047c2fd678ef0960d4f6f1eba131594cc369d4"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.19" = overridableMkRustCrate (profileName: rec {
    name = "ryu";
    version = "1.0.19";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6ea1a2d0a644769cc99faa24c3ad26b379b786fe7c36fd3c546254801650e6dd"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde."1.0.217" = overridableMkRustCrate (profileName: rec {
    name = "serde";
    version = "1.0.217";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "02fc4265df13d6fa1d00ecff087228cc0a2b5f3c0e87e258d8b94a156e984c70"; };
    features = builtins.concatLists [
      [ "alloc" ]
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" || rootFeatures' ? "lopdf/serde") "default")
      (lib.optional (rootFeatures' ? "lopdf/serde") "derive")
      (lib.optional (rootFeatures' ? "lopdf/serde") "serde_derive")
      [ "std" ]
    ];
    dependencies = {
      serde_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.217" { profileName = "__noProfile"; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.217" = overridableMkRustCrate (profileName: rec {
    name = "serde_derive";
    version = "1.0.217";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "5a9bf7cf98d04a2b28aead066b7496853d4779c9cc183c440dbac457641e19a0"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
    dependencies = {
      proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.93" { inherit profileName; }).out;
      quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" { inherit profileName; }).out;
      syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.96" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.138" = overridableMkRustCrate (profileName: rec {
    name = "serde_json";
    version = "1.0.138";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d434192e7da787e94a6ea7e9670b26a036d0ca41e0b7efb2676dd32bae872949"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.14" { inherit profileName; }).out;
      memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
      ryu = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.19" { inherit profileName; }).out;
      serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.217" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".serde_spanned."0.6.8" = overridableMkRustCrate (profileName: rec {
    name = "serde_spanned";
    version = "0.6.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "87607cb1398ed59d48732e575a4c28a7a8ebf2454b964fe3f224f2afc07909e1"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "serde")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "serde" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.217" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".shellexpand."3.1.0" = overridableMkRustCrate (profileName: rec {
    name = "shellexpand";
    version = "3.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "da03fa3b94cc19e3ebfc88c4229c49d8f08cdbd1228870a45f0ffdf84988e14b"; };
    features = builtins.concatLists [
      [ "base-0" ]
      [ "default" ]
      [ "dirs" ]
      [ "tilde" ]
    ];
    dependencies = {
      dirs = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs."5.0.1" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".shlex."1.3.0" = overridableMkRustCrate (profileName: rec {
    name = "shlex";
    version = "1.3.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".simd-adler32."0.3.7" = overridableMkRustCrate (profileName: rec {
    name = "simd-adler32";
    version = "0.3.7";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d66dc143e6b11c1eddc06d5c423cfc97062865baf299914ab64caa38182078fe"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "const-generics")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".simd_helpers."0.1.0" = overridableMkRustCrate (profileName: rec {
    name = "simd_helpers";
    version = "0.1.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "95890f873bec569a0362c235787f3aca6e1e887302ba4840839bcc6459c42da6"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "quote" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.2" = overridableMkRustCrate (profileName: rec {
    name = "smallvec";
    version = "1.13.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".strsim."0.11.1" = overridableMkRustCrate (profileName: rec {
    name = "strsim";
    version = "0.11.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".syn."2.0.96" = overridableMkRustCrate (profileName: rec {
    name = "syn";
    version = "2.0.96";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d5d0adab1ae378d7f53bdebc67a39f1f151407ef230f0ce2883572f5d8985c80"; };
    features = builtins.concatLists [
      [ "clone-impls" ]
      [ "default" ]
      [ "derive" ]
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "extra-traits")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "fold")
      [ "full" ]
      [ "parsing" ]
      [ "printing" ]
      [ "proc-macro" ]
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "visit")
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "visit-mut")
    ];
    dependencies = {
      proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.93" { inherit profileName; }).out;
      quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" { inherit profileName; }).out;
      unicode_ident = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.16" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".system-deps."6.2.2" = overridableMkRustCrate (profileName: rec {
    name = "system-deps";
    version = "6.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a3e535eb8dded36d55ec13eddacd30dec501792ff23a0b1682c38601b8cf2349"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "cfg_expr" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-expr."0.15.8" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "heck" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.5.0" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "pkg_config" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.31" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "toml" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.8.19" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "version_compare" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".version-compare."0.2.0" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".target-lexicon."0.12.16" = overridableMkRustCrate (profileName: rec {
    name = "target-lexicon";
    version = "0.12.16";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "61c41af27dd6d1e27b1b16b489db798443478cef1f06a660c96db617ba5de3b1"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tempfile."3.16.0" = overridableMkRustCrate (profileName: rec {
    name = "tempfile";
    version = "3.16.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "38c246215d7d24f48ae091a2902398798e05d978b24315d6efbc00ede9a8bb91"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "getrandom" ]
    ];
    dependencies = {
      cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
      fastrand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fastrand."2.3.0" { inherit profileName; }).out;
      ${ if hostPlatform.isUnix || hostPlatform.isWindows || hostPlatform.parsed.kernel.name == "wasi" then "getrandom" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.3.1" { inherit profileName; }).out;
      once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
      ${ if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "wasi" then "rustix" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.44" { inherit profileName; }).out;
      ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.69" = overridableMkRustCrate (profileName: rec {
    name = "thiserror";
    version = "1.0.69";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "b6aaf5339b578ea85b50e080feb250a3e8ae8cfcdff9a461c9ec2904bc923f52"; };
    dependencies = {
      thiserror_impl = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."1.0.69" { profileName = "__noProfile"; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".thiserror."2.0.11" = overridableMkRustCrate (profileName: rec {
    name = "thiserror";
    version = "2.0.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d452f284b73e6d76dd36758a0c8684b1d5be31f92b89d07fd5822175732206fc"; };
    features = builtins.concatLists [
      [ "default" ]
      [ "std" ]
    ];
    dependencies = {
      thiserror_impl = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."2.0.11" { profileName = "__noProfile"; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."1.0.69" = overridableMkRustCrate (profileName: rec {
    name = "thiserror-impl";
    version = "1.0.69";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4fee6c4efc90059e10f81e6d42c60a18f76588c3d74cb83a0b242a2b6c7504c1"; };
    dependencies = {
      proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.93" { inherit profileName; }).out;
      quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" { inherit profileName; }).out;
      syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.96" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."2.0.11" = overridableMkRustCrate (profileName: rec {
    name = "thiserror-impl";
    version = "2.0.11";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "26afc1baea8a989337eeb52b6e72a039780ce45c3edfcc9c5b9d112feeb173c2"; };
    dependencies = {
      proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.93" { inherit profileName; }).out;
      quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" { inherit profileName; }).out;
      syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.96" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tiff."0.9.1" = overridableMkRustCrate (profileName: rec {
    name = "tiff";
    version = "0.9.1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ba1310fcea54c6a9a4fd1aad794ecc02c31682f6bfbecdf460bf19533eed1e3e"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "flate2" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.35" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "jpeg" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".jpeg-decoder."0.3.1" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "weezl" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".weezl."0.1.8" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".time."0.3.37" = overridableMkRustCrate (profileName: rec {
    name = "time";
    version = "0.3.37";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "35e7868883861bd0e56d9ac6efcaaca0d6d5d82a2a7ec8209ff492c07cf37b21"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "default" ]
      [ "formatting" ]
      [ "parsing" ]
      [ "std" ]
    ];
    dependencies = {
      deranged = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".deranged."0.3.11" { inherit profileName; }).out;
      itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.14" { inherit profileName; }).out;
      num_conv = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-conv."0.1.0" { inherit profileName; }).out;
      powerfmt = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".powerfmt."0.2.0" { inherit profileName; }).out;
      serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.217" { inherit profileName; }).out;
      time_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".time-core."0.1.2" { inherit profileName; }).out;
      time_macros = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".time-macros."0.2.19" { profileName = "__noProfile"; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".time-core."0.1.2" = overridableMkRustCrate (profileName: rec {
    name = "time-core";
    version = "0.1.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".time-macros."0.2.19" = overridableMkRustCrate (profileName: rec {
    name = "time-macros";
    version = "0.2.19";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2834e6017e3e5e4b9834939793b282bc03b37a3336245fa820e35e233e2a85de"; };
    features = builtins.concatLists [
      [ "formatting" ]
      [ "parsing" ]
    ];
    dependencies = {
      num_conv = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-conv."0.1.0" { inherit profileName; }).out;
      time_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".time-core."0.1.2" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio."1.43.0" = overridableMkRustCrate (profileName: rec {
    name = "tokio";
    version = "1.43.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3d61fa4ffa3de412bfea335c6ecff681de2b609ba3c77ef3e00e521813a9ed9e"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") "bytes")
      (lib.optional (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") "default")
      (lib.optional (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") "fs")
      (lib.optional (rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio") "io-util")
      (lib.optional (rootFeatures' ? "lopdf/async") "macros")
      (lib.optional (rootFeatures' ? "lopdf/async") "rt")
      (lib.optional (rootFeatures' ? "lopdf/async") "rt-multi-thread")
      (lib.optional (rootFeatures' ? "lopdf/async") "tokio-macros")
    ];
    dependencies = {
      ${ if false then "backtrace" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.74" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio" then "bytes" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.9.0" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/async" || rootFeatures' ? "lopdf/tokio" then "pin_project_lite" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.16" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/async" then "tokio_macros" else null } = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-macros."2.5.0" { profileName = "__noProfile"; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".tokio-macros."2.5.0" = overridableMkRustCrate (profileName: rec {
    name = "tokio-macros";
    version = "2.5.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "6e06d43f1345a3bcd39f6a56dbb7dcab2ba47e68e8ac134855e7e2bdbaf8cab8"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/async" then "proc_macro2" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.93" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/async" then "quote" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/async" then "syn" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.96" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".toml."0.8.19" = overridableMkRustCrate (profileName: rec {
    name = "toml";
    version = "0.8.19";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a1ed1f98e3fdc28d6d910e6737ae6ab1a93bf1985935a1193e68f93eeb68d24e"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "parse")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "serde" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.217" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "serde_spanned" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_spanned."0.6.8" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "toml_datetime" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml_datetime."0.6.8" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "toml_edit" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml_edit."0.22.22" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".toml_datetime."0.6.8" = overridableMkRustCrate (profileName: rec {
    name = "toml_datetime";
    version = "0.6.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "serde")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "serde" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.217" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".toml_edit."0.22.22" = overridableMkRustCrate (profileName: rec {
    name = "toml_edit";
    version = "0.22.22";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "4ae48d6208a266e853d946088ed816055e556cc6028c5e8e2b84d9fa5dd7c7f5"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "parse")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "serde")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "indexmap" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.7.1" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "serde" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.217" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "serde_spanned" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_spanned."0.6.8" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "toml_datetime" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml_datetime."0.6.8" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "winnow" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winnow."0.6.25" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".typenum."1.17.0" = overridableMkRustCrate (profileName: rec {
    name = "typenum";
    version = "1.17.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "42ff0bf0c66b8238c6f3b578df37d0b7848e55df8577b3f74f92a69acceeb825"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.16" = overridableMkRustCrate (profileName: rec {
    name = "unicode-ident";
    version = "1.0.16";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a210d160f08b701c8721ba1c726c11662f877ea6b7094007e1ca9a1041945034"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".utf8parse."0.2.2" = overridableMkRustCrate (profileName: rec {
    name = "utf8parse";
    version = "0.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821"; };
    features = builtins.concatLists [
      [ "default" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".v_frame."0.3.8" = overridableMkRustCrate (profileName: rec {
    name = "v_frame";
    version = "0.3.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d6f32aaa24bacd11e488aa9ba66369c7cd514885742c9fe08cfe85884db3e92b"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "aligned_vec" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".aligned-vec."0.5.0" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "num_traits" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.19" { inherit profileName; }).out;
      ${ if (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") && hostPlatform.config == "wasm32-unknown-unknown" then "wasm_bindgen" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.100" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".version-compare."0.2.0" = overridableMkRustCrate (profileName: rec {
    name = "version-compare";
    version = "0.2.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "852e951cb7832cb45cb1169900d19760cfa39b82bc0ea9c0e5a14ae88411c98b"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.5" = overridableMkRustCrate (profileName: rec {
    name = "version_check";
    version = "0.9.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" = overridableMkRustCrate (profileName: rec {
    name = "wasi";
    version = "0.11.0+wasi-snapshot-preview1";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wasi."0.13.3+wasi-0.2.2" = overridableMkRustCrate (profileName: rec {
    name = "wasi";
    version = "0.13.3+wasi-0.2.2";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "26816d2e1a4a36a2940b96c5296ce403917633dff8f3440e9b236ed6f6bacad2"; };
    dependencies = {
      wit_bindgen_rt = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wit-bindgen-rt."0.33.0" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.100" = overridableMkRustCrate (profileName: rec {
    name = "wasm-bindgen";
    version = "0.2.100";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1edc8929d7499fc4e8f0be2262a241556cfc54a0bea223790e71446f2aab1ef5"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "msrv")
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "rustversion")
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "cfg_if" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "once_cell" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.20.2" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "rustversion" else null } = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustversion."1.0.19" { profileName = "__noProfile"; }).out;
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "wasm_bindgen_macro" else null } = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro."0.2.100" { profileName = "__noProfile"; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-backend."0.2.100" = overridableMkRustCrate (profileName: rec {
    name = "wasm-bindgen-backend";
    version = "0.2.100";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2f0a0651a5c2bc21487bde11ee802ccaf4c51935d0d3d42a6101f98161700bc6"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "bumpalo" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bumpalo."3.17.0" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "log" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.25" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "proc_macro2" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.93" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "quote" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "syn" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.96" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "wasm_bindgen_shared" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.100" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro."0.2.100" = overridableMkRustCrate (profileName: rec {
    name = "wasm-bindgen-macro";
    version = "0.2.100";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "7fe63fc6d09ed3792bd0897b314f53de8e16568c2b3f7982f468c0bf9bd0b407"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "quote" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "wasm_bindgen_macro_support" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro-support."0.2.100" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro-support."0.2.100" = overridableMkRustCrate (profileName: rec {
    name = "wasm-bindgen-macro-support";
    version = "0.2.100";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8ae87ea40c9f689fc23f209965b6fb8a99ad69aeeb0231408be24920604395de"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "proc_macro2" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.93" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "quote" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "syn" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.96" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "wasm_bindgen_backend" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-backend."0.2.100" { inherit profileName; }).out;
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "wasm_bindgen_shared" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.100" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.100" = overridableMkRustCrate (profileName: rec {
    name = "wasm-bindgen-shared";
    version = "0.2.100";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1a05d73b933a847d6cccdda8f838a22ff101ad9bf93e33684f39c1f5f0eece3d"; };
    dependencies = {
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" || rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "unicode_ident" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.16" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".weezl."0.1.8" = overridableMkRustCrate (profileName: rec {
    name = "weezl";
    version = "0.1.8";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "53a85b86a771b1c87058196170769dd264f66c0782acf1ae6cc51bfd64b39082"; };
    features = builtins.concatLists [
      [ "alloc" ]
      [ "default" ]
      [ "std" ]
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows-core."0.52.0" = overridableMkRustCrate (profileName: rec {
    name = "windows-core";
    version = "0.52.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default") "default")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/chrono" || rootFeatures' ? "lopdf/chrono_time" || rootFeatures' ? "lopdf/default" then "windows_targets" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" = overridableMkRustCrate (profileName: rec {
    name = "windows-sys";
    version = "0.48.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9"; };
    features = builtins.concatLists [
      [ "Win32" ]
      [ "Win32_Foundation" ]
      [ "Win32_Globalization" ]
      [ "Win32_System" ]
      [ "Win32_System_Com" ]
      [ "Win32_UI" ]
      [ "Win32_UI_Shell" ]
      [ "default" ]
    ];
    dependencies = {
      windows_targets = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.48.5" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.59.0" = overridableMkRustCrate (profileName: rec {
    name = "windows-sys";
    version = "0.59.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1e38bc4d79ed67fd075bcc251a1c39b32a1776bbe92e5bef1f0bf1f8c531853b"; };
    features = builtins.concatLists [
      [ "Win32" ]
      [ "Win32_Foundation" ]
      [ "Win32_NetworkManagement" ]
      [ "Win32_NetworkManagement_IpHelper" ]
      [ "Win32_Networking" ]
      [ "Win32_Networking_WinSock" ]
      [ "Win32_Storage" ]
      [ "Win32_Storage_FileSystem" ]
      [ "Win32_System" ]
      [ "Win32_System_Console" ]
      [ "Win32_System_Diagnostics" ]
      [ "Win32_System_Diagnostics_Debug" ]
      [ "Win32_System_Threading" ]
      [ "default" ]
    ];
    dependencies = {
      windows_targets = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.48.5" = overridableMkRustCrate (profileName: rec {
    name = "windows-targets";
    version = "0.48.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c"; };
    dependencies = {
      ${ if hostPlatform.config == "aarch64-pc-windows-gnullvm" then "windows_aarch64_gnullvm" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.48.5" { inherit profileName; }).out;
      ${ if hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.abi.name == "msvc" then "windows_aarch64_msvc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.48.5" { inherit profileName; }).out;
      ${ if hostPlatform.parsed.cpu.name == "i686" && hostPlatform.parsed.abi.name == "gnu" then "windows_i686_gnu" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.48.5" { inherit profileName; }).out;
      ${ if hostPlatform.parsed.cpu.name == "i686" && hostPlatform.parsed.abi.name == "msvc" then "windows_i686_msvc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.48.5" { inherit profileName; }).out;
      ${ if hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.abi.name == "gnu" then "windows_x86_64_gnu" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.48.5" { inherit profileName; }).out;
      ${ if hostPlatform.config == "x86_64-pc-windows-gnullvm" then "windows_x86_64_gnullvm" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.48.5" { inherit profileName; }).out;
      ${ if hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.abi.name == "msvc" then "windows_x86_64_msvc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.48.5" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.6" = overridableMkRustCrate (profileName: rec {
    name = "windows-targets";
    version = "0.52.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973"; };
    dependencies = {
      ${ if hostPlatform.config == "aarch64-pc-windows-gnullvm" then "windows_aarch64_gnullvm" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.52.6" { inherit profileName; }).out;
      ${ if hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.abi.name == "msvc" then "windows_aarch64_msvc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.52.6" { inherit profileName; }).out;
      ${ if hostPlatform.parsed.cpu.name == "i686" && hostPlatform.parsed.abi.name == "gnu" then "windows_i686_gnu" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.52.6" { inherit profileName; }).out;
      ${ if hostPlatform.config == "i686-pc-windows-gnullvm" then "windows_i686_gnullvm" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnullvm."0.52.6" { inherit profileName; }).out;
      ${ if hostPlatform.parsed.cpu.name == "i686" && hostPlatform.parsed.abi.name == "msvc" then "windows_i686_msvc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.52.6" { inherit profileName; }).out;
      ${ if hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.abi.name == "gnu" then "windows_x86_64_gnu" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.52.6" { inherit profileName; }).out;
      ${ if hostPlatform.config == "x86_64-pc-windows-gnullvm" then "windows_x86_64_gnullvm" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.52.6" { inherit profileName; }).out;
      ${ if (hostPlatform.parsed.cpu.name == "x86_64" || hostPlatform.parsed.cpu.name == "arm64ec") && hostPlatform.parsed.abi.name == "msvc" then "windows_x86_64_msvc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.52.6" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.48.5" = overridableMkRustCrate (profileName: rec {
    name = "windows_aarch64_gnullvm";
    version = "0.48.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.52.6" = overridableMkRustCrate (profileName: rec {
    name = "windows_aarch64_gnullvm";
    version = "0.52.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.48.5" = overridableMkRustCrate (profileName: rec {
    name = "windows_aarch64_msvc";
    version = "0.48.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.52.6" = overridableMkRustCrate (profileName: rec {
    name = "windows_aarch64_msvc";
    version = "0.52.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.48.5" = overridableMkRustCrate (profileName: rec {
    name = "windows_i686_gnu";
    version = "0.48.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.52.6" = overridableMkRustCrate (profileName: rec {
    name = "windows_i686_gnu";
    version = "0.52.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnullvm."0.52.6" = overridableMkRustCrate (profileName: rec {
    name = "windows_i686_gnullvm";
    version = "0.52.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.48.5" = overridableMkRustCrate (profileName: rec {
    name = "windows_i686_msvc";
    version = "0.48.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.52.6" = overridableMkRustCrate (profileName: rec {
    name = "windows_i686_msvc";
    version = "0.52.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.48.5" = overridableMkRustCrate (profileName: rec {
    name = "windows_x86_64_gnu";
    version = "0.48.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.52.6" = overridableMkRustCrate (profileName: rec {
    name = "windows_x86_64_gnu";
    version = "0.52.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.48.5" = overridableMkRustCrate (profileName: rec {
    name = "windows_x86_64_gnullvm";
    version = "0.48.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.52.6" = overridableMkRustCrate (profileName: rec {
    name = "windows_x86_64_gnullvm";
    version = "0.52.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.48.5" = overridableMkRustCrate (profileName: rec {
    name = "windows_x86_64_msvc";
    version = "0.48.5";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.52.6" = overridableMkRustCrate (profileName: rec {
    name = "windows_x86_64_msvc";
    version = "0.52.6";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec"; };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".winnow."0.6.25" = overridableMkRustCrate (profileName: rec {
    name = "winnow";
    version = "0.6.25";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "ad699df48212c6cc6eb4435f35500ac6fd3b9913324f938aea302022ce19d310"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "alloc")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "memchr" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.4" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".wit-bindgen-rt."0.33.0" = overridableMkRustCrate (profileName: rec {
    name = "wit-bindgen-rt";
    version = "0.33.0";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3268f3d866458b787f390cf61f4bbb563b922d091359f9608842999eaee3943c"; };
    features = builtins.concatLists [
      [ "bitflags" ]
    ];
    dependencies = {
      bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.8.0" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".zerocopy."0.7.35" = overridableMkRustCrate (profileName: rec {
    name = "zerocopy";
    version = "0.7.35";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "1b9b4fd18abc82b8136838da5d50bae7bdea537c574d8dc1a34ed098d6c166f0"; };
    features = builtins.concatLists [
      [ "byteorder" ]
      [ "default" ]
      [ "derive" ]
      [ "simd" ]
      [ "zerocopy-derive" ]
    ];
    dependencies = {
      byteorder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.5.0" { inherit profileName; }).out;
      zerocopy_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".zerocopy-derive."0.7.35" { profileName = "__noProfile"; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".zerocopy."0.8.14" = overridableMkRustCrate (profileName: rec {
    name = "zerocopy";
    version = "0.8.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "a367f292d93d4eab890745e75a778da40909cab4d6ff8173693812f79c4a2468"; };
    features = builtins.concatLists [
      [ "simd" ]
    ];
    dependencies = {
      ${ if false then "zerocopy_derive" else null } = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".zerocopy-derive."0.8.14" { profileName = "__noProfile"; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".zerocopy-derive."0.7.35" = overridableMkRustCrate (profileName: rec {
    name = "zerocopy-derive";
    version = "0.7.35";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "fa4f8080344d4671fb4e831a13ad1e68092748387dfc4f55e356242fae12ce3e"; };
    dependencies = {
      proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.93" { inherit profileName; }).out;
      quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" { inherit profileName; }).out;
      syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.96" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".zerocopy-derive."0.8.14" = overridableMkRustCrate (profileName: rec {
    name = "zerocopy-derive";
    version = "0.8.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "d3931cb58c62c13adec22e38686b559c86a30565e16ad6e8510a337cedc611e1"; };
    dependencies = {
      proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.93" { inherit profileName; }).out;
      quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.38" { inherit profileName; }).out;
      syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.96" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".zune-core."0.4.12" = overridableMkRustCrate (profileName: rec {
    name = "zune-core";
    version = "0.4.12";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "3f423a2c17029964870cfaabb1f13dfab7d092a62a29a89264f4d36990ca414a"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std")
    ];
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".zune-inflate."0.2.54" = overridableMkRustCrate (profileName: rec {
    name = "zune-inflate";
    version = "0.2.54";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "73ab332fe2f6680068f3582b16a24f90ad7096d5d39b974d1c0aff0125116f02"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "simd-adler32")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "zlib")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "simd_adler32" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".simd-adler32."0.3.7" { inherit profileName; }).out;
    };
  });
  
  "registry+https://github.com/rust-lang/crates.io-index".zune-jpeg."0.4.14" = overridableMkRustCrate (profileName: rec {
    name = "zune-jpeg";
    version = "0.4.14";
    registry = "registry+https://github.com/rust-lang/crates.io-index";
    src = fetchCratesIo { inherit name version; sha256 = "99a5bab8d7dedf81405c4bb1f2b83ea057643d9cb28778cea9eecddeedd2e028"; };
    features = builtins.concatLists [
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "default")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "neon")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "std")
      (lib.optional (rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image") "x86")
    ];
    dependencies = {
      ${ if rootFeatures' ? "lopdf/embed_image" || rootFeatures' ? "lopdf/image" then "zune_core" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zune-core."0.4.12" { inherit profileName; }).out;
    };
  });
  
}
